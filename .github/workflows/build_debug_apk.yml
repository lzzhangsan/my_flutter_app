name: Build Debug APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # 设置超时时间

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置Java环境
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # 设置Gradle (使用新的推荐操作)
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '7.6.1'

      # 配置网络参数 - 设置HTTP代理绕过问题
      - name: Configure network settings
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties << EOF
          org.gradle.jvmargs=-Xmx4g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          org.gradle.daemon=false
          org.gradle.parallel=true
          org.gradle.caching=true
          org.gradle.offline=true
          systemProp.https.protocols=TLSv1.2,TLSv1.3
          systemProp.http.connectionTimeout=180000
          systemProp.http.socketTimeout=180000
          systemProp.http.keepAlive=false
          EOF

      # 预先创建和配置gradle wrapper目录
      - name: Setup Gradle Wrapper
        run: |
          mkdir -p android/gradle/wrapper
          # 下载gradle-wrapper.jar (添加多个备用下载源)
          echo "下载gradle-wrapper.jar..."
          if ! curl -L --retry 5 --retry-delay 5 --connect-timeout 60 -o android/gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v7.6.1/gradle/wrapper/gradle-wrapper.jar; then
            echo "尝试备用下载源..."
            if ! curl -L --retry 5 --retry-delay 5 --connect-timeout 60 -o android/gradle/wrapper/gradle-wrapper.jar https://repo1.maven.org/maven2/org/gradle/gradle-wrapper/7.6.1/gradle-wrapper-7.6.1.jar; then
              echo "创建空的wrapper jar作为占位符"
              touch android/gradle/wrapper/gradle-wrapper.jar
            fi
          fi
          
          # 创建wrapper配置文件
          cat > android/gradle/wrapper/gradle-wrapper.properties << EOF
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-7.6.1-bin.zip
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF
          
          # 确保gradlew可执行
          chmod +x android/gradlew

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Install Flutter dependencies
        run: |
          flutter pub get
          flutter doctor -v

      # 修改Android构建配置
      - name: Configure Android build
        run: |
          # 修改build.gradle以使用国内镜像
          cat > android/build.gradle << EOF
          buildscript {
              repositories {
                  google()
                  mavenCentral()
                  maven { url 'https://maven.aliyun.com/repository/google' }
                  maven { url 'https://maven.aliyun.com/repository/central' }
                  maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:7.2.0'
                  classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21'
              }
          }

          allprojects {
              repositories {
                  google()
                  mavenCentral()
                  maven { url 'https://maven.aliyun.com/repository/google' }
                  maven { url 'https://maven.aliyun.com/repository/central' }
                  maven { url 'https://maven.aliyun.com/repository/public' }
                  maven { url 'https://jitpack.io' }
              }
          }

          rootProject.buildDir = '../build'
          subprojects {
              project.buildDir = "\${rootProject.buildDir}/\${project.name}"
          }
          subprojects {
              project.evaluationDependsOn(':app')
          }

          tasks.register("clean", Delete) {
              delete rootProject.buildDir
          }
          EOF
          
          # 添加gradle.properties配置
          cat > android/gradle.properties << EOF
          org.gradle.jvmargs=-Xmx1536M
          android.useAndroidX=true
          android.enableJetifier=true
          android.enableR8=true
          org.gradle.offline=true
          android.defaults.buildfeatures.buildconfig=true
          android.nonTransitiveRClass=false
          android.nonFinalResIds=false
          EOF

      # 直接构建APK
      - name: Build Debug APK
        run: |
          # 关闭分析以减少网络请求
          flutter build apk --debug --no-pub --suppress-analytics

      # 备用构建方法
      - name: Fallback Build (if needed)
        if: failure()
        run: |
          cd android
          ./gradlew assembleDebug --offline --no-daemon --stacktrace

      # 上传构建产物
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/apk/debug/app-debug.apk
          if-no-files-found: warn
          retention-days: 7
